<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Title>Content Authenticity .NET Library</Title>
    <Company>Microsoft</Company>
    <Authors>Prakash Duggaraju</Authors>
    <Description>.NET Bindings on top of Rust c2pa-rs library.</Description>
    <Copyright>Copyright (c) Prakash Duggaraju 2025</Copyright>
    <PackageProjectUrl>https://github.com/duggaraju/c2pa.net</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/duggaraju/c2pa.net</RepositoryUrl>
    <CargoOutput>$(MSBuildThisFileDirectory)../c2pa-rs/target/$(Configuration.ToLower())/</CargoOutput>
    <BindingsFolder>Bindings</BindingsFolder>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <C2paLibrary>c2pa_c.dll</C2paLibrary>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <C2paLibrary>libc2pa_c.so</C2paLibrary>
    <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <C2paLibrary>libc2pa_c.dylib</C2paLibrary>
    <RuntimeIdentifier>osx-arm64</RuntimeIdentifier>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Text.Json" />
  </ItemGroup>
  <!-- Temporary workaround for Linux till .NET 10 comes out -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <PackageReference Include="libClangSharp.runtime.linux-x64" GeneratePathProperty="true" IncludeAssets="none "/>
    <PackageReference Include="libclang.runtime.linux-x64" GeneratePathProperty="true" IncludeAssets="none"/>
  </ItemGroup>
  <ItemGroup>
    <Content Include="$(CargoOutput)$(C2paLibrary)" CopyToOutputDirectory="PreserveNewest" Pack="true" PackagePath="runtimes/$(RuntimeIdentifier)/native/" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <Target Name="GenerateBindings" DependsOnTargets="Cargo" BeforeTargets="CoreCompile" Condition="!Exists('$(BindingsFolder)/C2paBindings.cs')" Inputs="$(CargoOutput)/c2pa.h" Outputs="$(BindingsFolder)/C2paBindings.cs">
    <PropertyGroup>
      <ConfigOptions>-c latest-codegen multi-file generate-file-scoped-namespaces generate-helper-types generate-tests-xunit -fh header</ConfigOptions>
      <InteropArgs>-n ContentAuthenticity.Bindings -m C2paBindings -l $(C2paLibrary) -p c2pa_ --test-output ../tests/$(BindingsFolder) -r C2paSigningAlg=SigningAlg -x c</InteropArgs>
      <PlatformArgs Condition="$([MSBuild]::IsOSPlatform('Linux'))">-I /usr/lib/gcc/x86_64-linux-gnu/14/include/ -Wno-ignored-attributes -Wno-attributes</PlatformArgs>
      <EnvironmentVariables Condition="$([MSBuild]::IsOSPlatform('Linux'))">LD_LIBRARY_PATH=$(PkglibClangSharp_runtime_linux-x64)/runtimes/linux-x64/native:$(Pkglibclang_runtime_linux-x64)/runtimes/linux-x64/native</EnvironmentVariables>
    </PropertyGroup>
    <Exec Command="dotnet tool run clangsharppinvokegenerator -- -f $(CargoOutput)c2pa.h -o $(BindingsFolder) $(InteropArgs) $(ConfigOptions) $(PlatformArgs)" EnvironmentVariables="$(EnvironmentVariables)" IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" />
    <CreateItem Include="$(BindingsFolder)/*.cs">
      <Output TaskParameter="Include" ItemName="Compile" />
    </CreateItem>
  </Target>

  <Target Name="Cargo" Inputs="$(MSBuildThisFileDirectory)../c2pa-rs/Cargo.toml" Outputs="$(CargoOutput)c2pa.h;$(CargoOutput)/$(C2paLibrary)">
    <PropertyGroup>
      <CargoArgs Condition="'$(Configuration)' == 'Release'">--release</CargoArgs>
    </PropertyGroup>
    <Exec Command="cargo build $(CargoArgs) --features rust_native_crypto" WorkingDirectory="$(MSBuildThisFileDirectory)../c2pa-rs/c2pa_c_ffi" />
  </Target>
</Project>
